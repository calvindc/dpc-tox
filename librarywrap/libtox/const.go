package libtox

//#include <tox/tox.h>
import "C"
import "errors"

/*
typedef Tox_Err_Options_New TOX_ERR_OPTIONS_NEW;
typedef Tox_Err_New TOX_ERR_NEW;
typedef Tox_Err_Bootstrap TOX_ERR_BOOTSTRAP;
typedef Tox_Err_Set_Info TOX_ERR_SET_INFO;
typedef Tox_Err_Friend_Add TOX_ERR_FRIEND_ADD;
typedef Tox_Err_Friend_Delete TOX_ERR_FRIEND_DELETE;
typedef Tox_Err_Friend_By_Public_Key TOX_ERR_FRIEND_BY_PUBLIC_KEY;
typedef Tox_Err_Friend_Get_Public_Key TOX_ERR_FRIEND_GET_PUBLIC_KEY;
typedef Tox_Err_Friend_Get_Last_Online TOX_ERR_FRIEND_GET_LAST_ONLINE;
typedef Tox_Err_Friend_Query TOX_ERR_FRIEND_QUERY;
typedef Tox_Err_Set_Typing TOX_ERR_SET_TYPING;
typedef Tox_Err_Friend_Send_Message TOX_ERR_FRIEND_SEND_MESSAGE;
typedef Tox_Err_File_Control TOX_ERR_FILE_CONTROL;
typedef Tox_Err_File_Seek TOX_ERR_FILE_SEEK;
typedef Tox_Err_File_Get TOX_ERR_FILE_GET;
typedef Tox_Err_File_Send TOX_ERR_FILE_SEND;
typedef Tox_Err_File_Send_Chunk TOX_ERR_FILE_SEND_CHUNK;
typedef Tox_Err_Conference_New TOX_ERR_CONFERENCE_NEW;
typedef Tox_Err_Conference_Delete TOX_ERR_CONFERENCE_DELETE;
typedef Tox_Err_Conference_Peer_Query TOX_ERR_CONFERENCE_PEER_QUERY;
typedef Tox_Err_Conference_Set_Max_Offline TOX_ERR_CONFERENCE_SET_MAX_OFFLINE;
typedef Tox_Err_Conference_By_Id TOX_ERR_CONFERENCE_BY_ID;
typedef Tox_Err_Conference_By_Uid TOX_ERR_CONFERENCE_BY_UID;
typedef Tox_Err_Conference_Invite TOX_ERR_CONFERENCE_INVITE;
typedef Tox_Err_Conference_Join TOX_ERR_CONFERENCE_JOIN;
typedef Tox_Err_Conference_Send_Message TOX_ERR_CONFERENCE_SEND_MESSAGE;
typedef Tox_Err_Conference_Title TOX_ERR_CONFERENCE_TITLE;
typedef Tox_Err_Conference_Get_Type TOX_ERR_CONFERENCE_GET_TYPE;
typedef Tox_Err_Friend_Custom_Packet TOX_ERR_FRIEND_CUSTOM_PACKET;
typedef Tox_Err_Get_Port TOX_ERR_GET_PORT;
typedef Tox_User_Status TOX_USER_STATUS;
typedef Tox_Message_Type TOX_MESSAGE_TYPE;
typedef Tox_Proxy_Type TOX_PROXY_TYPE;
typedef Tox_Savedata_Type TOX_SAVEDATA_TYPE;
typedef Tox_Log_Level TOX_LOG_LEVEL;
typedef Tox_Connection TOX_CONNECTION;
typedef Tox_File_Control TOX_FILE_CONTROL;
typedef Tox_Conference_Type TOX_CONFERENCE_TYPE;
typedef enum Tox_File_Kind TOX_FILE_KIND;
*/
const (
	TOX_PUBLIC_KEY_SIZE           = C.TOX_PUBLIC_KEY_SIZE           //32
	TOX_SECRET_KEY_SIZE           = C.TOX_SECRET_KEY_SIZE           //32
	TOX_CONFERENCE_UID_SIZE       = C.TOX_CONFERENCE_UID_SIZE       //32
	TOX_CONFERENCE_ID_SIZE        = C.TOX_CONFERENCE_ID_SIZE        //32
	TOX_NOSPAM_SIZE               = C.TOX_NOSPAM_SIZE               //(sizeof(uint32_t))
	TOX_ADDRESS_SIZE              = C.TOX_ADDRESS_SIZE              //(TOX_PUBLIC_KEY_SIZE + TOX_NOSPAM_SIZE + sizeof(uint16_t))
	TOX_MAX_NAME_LENGTH           = C.TOX_MAX_NAME_LENGTH           //128
	TOX_MAX_STATUS_MESSAGE_LENGTH = C.TOX_MAX_STATUS_MESSAGE_LENGTH //1007
	TOX_MAX_FRIEND_REQUEST_LENGTH = C.TOX_MAX_FRIEND_REQUEST_LENGTH //1016
	TOX_MAX_MESSAGE_LENGTH        = C.TOX_MAX_MESSAGE_LENGTH        //1372
	TOX_MAX_CUSTOM_PACKET_SIZE    = C.TOX_MAX_CUSTOM_PACKET_SIZE    //1373
	TOX_HASH_LENGTH               = C.TOX_HASH_LENGTH               //32
	TOX_FILE_ID_LENGTH            = C.TOX_FILE_ID_LENGTH            //32
	TOX_MAX_FILENAME_LENGTH       = C.TOX_MAX_FILENAME_LENGTH       //255
	TOX_MAX_HOSTNAME_LENGTH       = C.TOX_MAX_HOSTNAME_LENGTH       //255
)

type ToxUserStatus C.TOX_USER_STATUS

var (
	TOX_USERSTATUS_NONE = C.TOX_USER_STATUS_NONE //User is online and available.
	TOX_USERSTATUS_AWAY = C.TOX_USER_STATUS_AWAY //User is away. Clients can set this e.g. after a user defined inactivity time.
	TOX_USERSTATUS_BUSY = C.TOX_USER_STATUS_BUSY //User is busy. Signals to other clients that this client does not currently wish to communicate.
)

type ToxMessageType C.TOX_MESSAGE_TYPE

var (
	TOX_MESSAGE_TYPE_NORMAL = C.TOX_MESSAGE_TYPE_NORMAL
	TOX_MESSAGE_TYPE_ACTION = C.TOX_MESSAGE_TYPE_ACTION
)

type ToxProxyType C.TOX_PROXY_TYPE

var (
	TOX_PROXY_TYPE_NONE   = C.TOX_PROXY_TYPE_NONE
	TOX_PROXY_TYPE_HTTP   = C.TOX_PROXY_TYPE_HTTP
	TOX_PROXY_TYPE_SOCKS5 = C.TOX_PROXY_TYPE_SOCKS5
)

type ToxSaveDataType C.TOX_SAVEDATA_TYPE

var (
	TOX_SAVEDATA_TYPE_NONE       = C.TOX_SAVEDATA_TYPE_NONE
	TOX_SAVEDATA_TYPE_TOX_SAVE   = C.TOX_SAVEDATA_TYPE_TOX_SAVE
	TOX_SAVEDATA_TYPE_SECRET_KEY = C.TOX_SAVEDATA_TYPE_SECRET_KEY
)

type ToxConferenceType C.Tox_Conference_Type

var (
	TOX_CONFERENCE_TYPE_TEXT = C.TOX_CONFERENCE_TYPE_TEXT
	TOX_CONFERENCE_TYPE_AV   = C.TOX_CONFERENCE_TYPE_AV
)

type ToxErrOptionsNew C.TOX_ERR_OPTIONS_NEW

var (
	TOX_ERR_OPTIONS_NEW_OK     = C.TOX_ERR_OPTIONS_NEW_OK
	TOX_ERR_OPTIONS_NEW_MALLOC = C.TOX_ERR_OPTIONS_NEW_MALLOC
)

type ToxConnection C.Tox_Connection

var (
	TOX_CONNECTION_NONE = C.TOX_CONNECTION_NONE
	TOX_CONNECTION_TCP  = C.TOX_CONNECTION_TCP
	TOX_CONNECTION_UDP  = C.TOX_CONNECTION_UDP
)

type ToxFileKind C.TOX_FILE_KIND

var (
	TOX_FILE_KIND_DATA   = C.TOX_FILE_KIND_DATA
	TOX_FILE_KIND_AVATAR = C.TOX_FILE_KIND_AVATAR
)

type ToxFileControl C.TOX_FILE_CONTROL

var (
	TOX_FILE_CONTROL_RESUME = C.TOX_FILE_CONTROL_RESUME
	TOX_FILE_CONTROL_PAUSE  = C.TOX_FILE_CONTROL_PAUSE
	TOX_FILE_CONTROL_CANCEL = C.TOX_FILE_CONTROL_CANCEL
)

/* === Errors === */
// General errors
var (
	ErrToxNew   = errors.New("Error initializing Tox")
	ErrToxInit  = errors.New("Tox not initialized")
	ErrArgs     = errors.New("Nil arguments or wrong size")
	ErrFuncFail = errors.New("Function failed")
	ErrUnknown  = errors.New("An unknown error occoured")
)

var (
	ErrNewMalloc        = errors.New("Memory allocation failed")
	ErrNewPortAlloc     = errors.New("Could not bind to port")
	ErrNewProxy         = errors.New("Invalid proxy configuration")
	ErrNewLoadEnc       = errors.New("The savedata is encrypted")
	ErrNewLoadBadFormat = errors.New("The savedata format is invalid")
)

type ToxErrNew C.TOX_ERR_NEW

var (
	TOX_ERR_NEW_OK              = C.TOX_ERR_NEW_OK
	TOX_ERR_NEW_NULL            = C.TOX_ERR_NEW_NULL
	TOX_ERR_NEW_MALLOC          = C.TOX_ERR_NEW_MALLOC
	TOX_ERR_NEW_PORT_ALLOC      = C.TOX_ERR_NEW_PORT_ALLOC
	TOX_ERR_NEW_PROXY_BAD_TYPE  = C.TOX_ERR_NEW_PROXY_BAD_TYPE
	TOX_ERR_NEW_PROXY_BAD_HOST  = C.TOX_ERR_NEW_PROXY_BAD_HOST
	TOX_ERR_NEW_PROXY_BAD_PORT  = C.TOX_ERR_NEW_PROXY_BAD_PORT
	TOX_ERR_NEW_PROXY_NOT_FOUND = C.TOX_ERR_NEW_PROXY_NOT_FOUND
	TOX_ERR_NEW_LOAD_ENCRYPTED  = C.TOX_ERR_NEW_LOAD_ENCRYPTED
	TOX_ERR_NEW_LOAD_BAD_FORMAT = C.TOX_ERR_NEW_LOAD_BAD_FORMAT
)

type ToxErrBootstrap C.TOX_ERR_BOOTSTRAP

var (
	TOX_ERR_BOOTSTRAP_OK       = C.TOX_ERR_BOOTSTRAP_OK
	TOX_ERR_BOOTSTRAP_NULL     = C.TOX_ERR_BOOTSTRAP_NULL
	TOX_ERR_BOOTSTRAP_BAD_HOST = C.TOX_ERR_BOOTSTRAP_BAD_HOST
	TOX_ERR_BOOTSTRAP_BAD_PORT = C.TOX_ERR_BOOTSTRAP_BAD_PORT
)

var (
	ErrFriendAddTooLong      = errors.New("Message too long")
	ErrFriendAddNoMessage    = errors.New("Empty message")
	ErrFriendAddOwnKey       = errors.New("Own key")
	ErrFriendAddAlreadySent  = errors.New("Already sent")
	ErrFriendAddBadChecksum  = errors.New("Bad checksum in address")
	ErrFriendAddSetNewNospam = errors.New("Different nospam")
	ErrFriendAddNoMem        = errors.New("Failed increasing friend list")
)

type ToxErrFriendAdd C.TOX_ERR_FRIEND_ADD

var (
	TOX_ERR_FRIEND_ADD_OK             = C.TOX_ERR_FRIEND_ADD_OK
	TOX_ERR_FRIEND_ADD_NULL           = C.TOX_ERR_FRIEND_ADD_NULL
	TOX_ERR_FRIEND_ADD_TOO_LONG       = C.TOX_ERR_FRIEND_ADD_TOO_LONG
	TOX_ERR_FRIEND_ADD_NO_MESSAGE     = C.TOX_ERR_FRIEND_ADD_NO_MESSAGE
	TOX_ERR_FRIEND_ADD_OWN_KEY        = C.TOX_ERR_FRIEND_ADD_OWN_KEY
	TOX_ERR_FRIEND_ADD_ALREADY_SENT   = C.TOX_ERR_FRIEND_ADD_ALREADY_SENT
	TOX_ERR_FRIEND_ADD_BAD_CHECKSUM   = C.TOX_ERR_FRIEND_ADD_BAD_CHECKSUM
	TOX_ERR_FRIEND_ADD_SET_NEW_NOSPAM = C.TOX_ERR_FRIEND_ADD_SET_NEW_NOSPAM
	TOX_ERR_FRIEND_ADD_MALLOC         = C.TOX_ERR_FRIEND_ADD_MALLOC
)

type ToxErrFriendByPublicKey C.TOX_ERR_FRIEND_BY_PUBLIC_KEY

var (
	TOX_ERR_FRIEND_BY_PUBLIC_KEY_OK        = C.TOX_ERR_FRIEND_BY_PUBLIC_KEY_OK
	TOX_ERR_FRIEND_BY_PUBLIC_KEY_NULL      = C.TOX_ERR_FRIEND_BY_PUBLIC_KEY_NULL
	TOX_ERR_FRIEND_BY_PUBLIC_KEY_NOT_FOUND = C.TOX_ERR_FRIEND_BY_PUBLIC_KEY_NOT_FOUND
)

type ToxErrFriendGetPublicKey C.TOX_ERR_FRIEND_GET_PUBLIC_KEY

var (
	TOX_ERR_FRIEND_GET_PUBLIC_KEY_OK               = C.TOX_ERR_FRIEND_GET_PUBLIC_KEY_OK
	TOX_ERR_FRIEND_GET_PUBLIC_KEY_FRIEND_NOT_FOUND = C.TOX_ERR_FRIEND_GET_PUBLIC_KEY_FRIEND_NOT_FOUND
)

type ToxErrFriendDelete C.TOX_ERR_FRIEND_DELETE

var (
	TOX_ERR_FRIEND_DELETE_OK               = C.TOX_ERR_FRIEND_DELETE_OK
	TOX_ERR_FRIEND_DELETE_FRIEND_NOT_FOUND = C.TOX_ERR_FRIEND_DELETE_FRIEND_NOT_FOUND
)

type ToxErrFriendQuery C.TOX_ERR_FRIEND_QUERY

var (
	TOX_ERR_FRIEND_QUERY_OK               = C.TOX_ERR_FRIEND_QUERY_OK
	TOX_ERR_FRIEND_QUERY_NULL             = C.TOX_ERR_FRIEND_QUERY_NULL
	TOX_ERR_FRIEND_QUERY_FRIEND_NOT_FOUND = C.TOX_ERR_FRIEND_QUERY_FRIEND_NOT_FOUND
)

type ToxErrSetInfo C.TOX_ERR_SET_INFO

var (
	TOX_ERR_SET_INFO_OK       = C.TOX_ERR_SET_INFO_OK
	TOX_ERR_SET_INFO_NULL     = C.TOX_ERR_SET_INFO_NULL
	TOX_ERR_SET_INFO_TOO_LONG = C.TOX_ERR_SET_INFO_TOO_LONG
)

type ToxErrSetTyping C.TOX_ERR_SET_TYPING

var (
	TOX_ERR_SET_TYPING_OK               = C.TOX_ERR_SET_TYPING_OK
	TOX_ERR_SET_TYPING_FRIEND_NOT_FOUND = C.TOX_ERR_SET_TYPING_FRIEND_NOT_FOUND
)

type ToxErrFriendSendMessage C.TOX_ERR_FRIEND_SEND_MESSAGE

var (
	TOX_ERR_FRIEND_SEND_MESSAGE_OK                   = C.TOX_ERR_FRIEND_SEND_MESSAGE_OK
	TOX_ERR_FRIEND_SEND_MESSAGE_NULL                 = C.TOX_ERR_FRIEND_SEND_MESSAGE_NULL
	TOX_ERR_FRIEND_SEND_MESSAGE_FRIEND_NOT_FOUND     = C.TOX_ERR_FRIEND_SEND_MESSAGE_FRIEND_NOT_FOUND
	TOX_ERR_FRIEND_SEND_MESSAGE_FRIEND_NOT_CONNECTED = C.TOX_ERR_FRIEND_SEND_MESSAGE_FRIEND_NOT_CONNECTED
	TOX_ERR_FRIEND_SEND_MESSAGE_SENDQ                = C.TOX_ERR_FRIEND_SEND_MESSAGE_SENDQ
	TOX_ERR_FRIEND_SEND_MESSAGE_TOO_LONG             = C.TOX_ERR_FRIEND_SEND_MESSAGE_TOO_LONG
	TOX_ERR_FRIEND_SEND_MESSAGE_EMPTY                = C.TOX_ERR_FRIEND_SEND_MESSAGE_EMPTY
)

type ToxErrFriendGetLastOnline C.TOX_ERR_FRIEND_GET_LAST_ONLINE

var (
	TOX_ERR_FRIEND_GET_LAST_ONLINE_OK               = C.TOX_ERR_FRIEND_GET_LAST_ONLINE_OK
	TOX_ERR_FRIEND_GET_LAST_ONLINE_FRIEND_NOT_FOUND = C.TOX_ERR_FRIEND_GET_LAST_ONLINE_FRIEND_NOT_FOUND
)

type ToxErrFileControl C.TOX_ERR_FILE_CONTROL

var (
	TOX_ERR_FILE_CONTROL_OK                   = C.TOX_ERR_FILE_CONTROL_OK
	TOX_ERR_FILE_CONTROL_FRIEND_NOT_FOUND     = C.TOX_ERR_FILE_CONTROL_FRIEND_NOT_FOUND
	TOX_ERR_FILE_CONTROL_FRIEND_NOT_CONNECTED = C.TOX_ERR_FILE_CONTROL_FRIEND_NOT_CONNECTED
	TOX_ERR_FILE_CONTROL_NOT_FOUND            = C.TOX_ERR_FILE_CONTROL_NOT_FOUND
	TOX_ERR_FILE_CONTROL_NOT_PAUSED           = C.TOX_ERR_FILE_CONTROL_NOT_PAUSED
	TOX_ERR_FILE_CONTROL_DENIED               = C.TOX_ERR_FILE_CONTROL_DENIED
	TOX_ERR_FILE_CONTROL_ALREADY_PAUSED       = C.TOX_ERR_FILE_CONTROL_ALREADY_PAUSED
	TOX_ERR_FILE_CONTROL_SENDQ                = C.TOX_ERR_FILE_CONTROL_SENDQ
)

type ToxErrFileSeek C.TOX_ERR_FILE_SEEK

var (
	TOX_ERR_FILE_SEEK_OK                   = C.TOX_ERR_FILE_SEEK_OK
	TOX_ERR_FILE_SEEK_FRIEND_NOT_FOUND     = C.TOX_ERR_FILE_SEEK_FRIEND_NOT_FOUND
	TOX_ERR_FILE_SEEK_FRIEND_NOT_CONNECTED = C.TOX_ERR_FILE_SEEK_FRIEND_NOT_CONNECTED
	TOX_ERR_FILE_SEEK_NOT_FOUND            = C.TOX_ERR_FILE_SEEK_NOT_FOUND
	TOX_ERR_FILE_SEEK_DENIED               = C.TOX_ERR_FILE_SEEK_DENIED
	TOX_ERR_FILE_SEEK_INVALID_POSITION     = C.TOX_ERR_FILE_SEEK_INVALID_POSITION
	TOX_ERR_FILE_SEEK_SENDQ                = C.TOX_ERR_FILE_SEEK_SENDQ
)

type ToxErrFileGet C.TOX_ERR_FILE_GET

var (
	TOX_ERR_FILE_GET_OK               = C.TOX_ERR_FILE_GET_OK
	TOX_ERR_FILE_GET_NULL             = C.TOX_ERR_FILE_GET_NULL
	TOX_ERR_FILE_GET_FRIEND_NOT_FOUND = C.TOX_ERR_FILE_GET_FRIEND_NOT_FOUND
	TOX_ERR_FILE_GET_NOT_FOUND        = C.TOX_ERR_FILE_GET_NOT_FOUND
)

var (
	ErrFileSendInvalidFileID = errors.New("The size of the given FileID is invalid.")
)

type ToxErrFileSend C.TOX_ERR_FILE_SEND

var (
	TOX_ERR_FILE_SEND_OK                   = C.TOX_ERR_FILE_SEND_OK
	TOX_ERR_FILE_SEND_NULL                 = C.TOX_ERR_FILE_SEND_NULL
	TOX_ERR_FILE_SEND_FRIEND_NOT_FOUND     = C.TOX_ERR_FILE_SEND_FRIEND_NOT_FOUND
	TOX_ERR_FILE_SEND_FRIEND_NOT_CONNECTED = C.TOX_ERR_FILE_SEND_FRIEND_NOT_CONNECTED
	TOX_ERR_FILE_SEND_NAME_TOO_LONG        = C.TOX_ERR_FILE_SEND_NAME_TOO_LONG
	TOX_ERR_FILE_SEND_TOO_MANY             = C.TOX_ERR_FILE_SEND_TOO_MANY
)

type ToxErrFileSendChunk C.TOX_ERR_FILE_SEND_CHUNK

var (
	TOX_ERR_FILE_SEND_CHUNK_OK                   = C.TOX_ERR_FILE_SEND_CHUNK_OK
	TOX_ERR_FILE_SEND_CHUNK_NULL                 = C.TOX_ERR_FILE_SEND_CHUNK_NULL
	TOX_ERR_FILE_SEND_CHUNK_FRIEND_NOT_FOUND     = C.TOX_ERR_FILE_SEND_CHUNK_FRIEND_NOT_FOUND
	TOX_ERR_FILE_SEND_CHUNK_FRIEND_NOT_CONNECTED = C.TOX_ERR_FILE_SEND_CHUNK_FRIEND_NOT_CONNECTED
	TOX_ERR_FILE_SEND_CHUNK_NOT_FOUND            = C.TOX_ERR_FILE_SEND_CHUNK_NOT_FOUND
	TOX_ERR_FILE_SEND_CHUNK_NOT_TRANSFERRING     = C.TOX_ERR_FILE_SEND_CHUNK_NOT_TRANSFERRING
	TOX_ERR_FILE_SEND_CHUNK_INVALID_LENGTH       = C.TOX_ERR_FILE_SEND_CHUNK_INVALID_LENGTH
	TOX_ERR_FILE_SEND_CHUNK_SENDQ                = C.TOX_ERR_FILE_SEND_CHUNK_SENDQ
	TOX_ERR_FILE_SEND_CHUNK_WRONG_POSITION       = C.TOX_ERR_FILE_SEND_CHUNK_WRONG_POSITION
)

type ToxErrFriendCustomPacket C.TOX_ERR_FRIEND_CUSTOM_PACKET

var (
	TOX_ERR_FRIEND_CUSTOM_PACKET_OK                   = C.TOX_ERR_FRIEND_CUSTOM_PACKET_OK
	TOX_ERR_FRIEND_CUSTOM_PACKET_NULL                 = C.TOX_ERR_FRIEND_CUSTOM_PACKET_NULL
	TOX_ERR_FRIEND_CUSTOM_PACKET_FRIEND_NOT_FOUND     = C.TOX_ERR_FRIEND_CUSTOM_PACKET_FRIEND_NOT_FOUND
	TOX_ERR_FRIEND_CUSTOM_PACKET_FRIEND_NOT_CONNECTED = C.TOX_ERR_FRIEND_CUSTOM_PACKET_FRIEND_NOT_CONNECTED
	TOX_ERR_FRIEND_CUSTOM_PACKET_INVALID              = C.TOX_ERR_FRIEND_CUSTOM_PACKET_INVALID
	TOX_ERR_FRIEND_CUSTOM_PACKET_EMPTY                = C.TOX_ERR_FRIEND_CUSTOM_PACKET_EMPTY
	TOX_ERR_FRIEND_CUSTOM_PACKET_TOO_LONG             = C.TOX_ERR_FRIEND_CUSTOM_PACKET_TOO_LONG
	TOX_ERR_FRIEND_CUSTOM_PACKET_SENDQ                = C.TOX_ERR_FRIEND_CUSTOM_PACKET_SENDQ
)

type ToxErrGetPort C.TOX_ERR_GET_PORT

var (
	TOX_ERR_GET_PORT_OK        = C.TOX_ERR_GET_PORT_OK
	TOX_ERR_GET_PORT_NOT_BOUND = C.TOX_ERR_GET_PORT_NOT_BOUND
)

var (
	ErrConferenceNewFailedInitialize = errors.New("conference instance failed to initialize")
)

// Conference

type ToxErrConferenceNew C.TOX_ERR_CONFERENCE_NEW

var (
	TOX_ERR_CONFERENCE_NEW_OK   = C.TOX_ERR_CONFERENCE_NEW_OK   //The function returned successfully.
	TOX_ERR_CONFERENCE_NEW_INIT = C.TOX_ERR_CONFERENCE_NEW_INIT //The conference instance failed to initialize.
)

var (
	ErrConferenceDeleteFailed             = errors.New("delete conference failed")
	ErrConferenceDeleteConferenceNotFound = errors.New("the conference number passed did not designate a valid conference.")
)

type ToxErrConferenceDelete C.TOX_ERR_CONFERENCE_DELETE

var (
	TOX_ERR_CONFERENCE_DELETE_OK                   = C.TOX_ERR_CONFERENCE_DELETE_OK
	TOX_ERR_CONFERENCE_DELETE_CONFERENCE_NOT_FOUND = C.TOX_ERR_CONFERENCE_DELETE_CONFERENCE_NOT_FOUND //The conference number passed did not designate a valid conference.
)

type ToxErrConferencePeerQuery C.TOX_ERR_CONFERENCE_PEER_QUERY

var (
	TOX_ERR_CONFERENCE_PEER_QUERY_OK                   = C.TOX_ERR_CONFERENCE_PEER_QUERY_OK
	TOX_ERR_CONFERENCE_PEER_QUERY_CONFERENCE_NOT_FOUND = C.TOX_ERR_CONFERENCE_PEER_QUERY_CONFERENCE_NOT_FOUND
	TOX_ERR_CONFERENCE_PEER_QUERY_PEER_NOT_FOUND       = C.TOX_ERR_CONFERENCE_PEER_QUERY_PEER_NOT_FOUND
	TOX_ERR_CONFERENCE_PEER_QUERY_NO_CONNECTION        = C.TOX_ERR_CONFERENCE_PEER_QUERY_NO_CONNECTION
)

var (
	ErrConferenceInviteConferenceNotFound = errors.New("The conference number passed did not designate a valid conference")
	ErrConferenceInviteFailSend           = errors.New("The invite packet failed to send")
	ErrConferenceInviteNoConnection       = errors.New("The client is not connected to the conference")
)

type ToxErrConferenceInvite C.TOX_ERR_CONFERENCE_INVITE

var (
	TOX_ERR_CONFERENCE_INVITE_OK                   = C.TOX_ERR_CONFERENCE_INVITE_OK
	TOX_ERR_CONFERENCE_INVITE_CONFERENCE_NOT_FOUND = C.TOX_ERR_CONFERENCE_INVITE_CONFERENCE_NOT_FOUND
	TOX_ERR_CONFERENCE_INVITE_FAIL_SEND            = C.TOX_ERR_CONFERENCE_INVITE_FAIL_SEND
	TOX_ERR_CONFERENCE_INVITE_NO_CONNECTION        = C.TOX_ERR_CONFERENCE_INVITE_NO_CONNECTION
)

type ToxErrConferenceSendMessage C.TOX_ERR_CONFERENCE_SEND_MESSAGE

var (
	TOX_ERR_CONFERENCE_SEND_MESSAGE_OK                   = C.TOX_ERR_CONFERENCE_SEND_MESSAGE_OK
	TOX_ERR_CONFERENCE_SEND_MESSAGE_CONFERENCE_NOT_FOUND = C.TOX_ERR_CONFERENCE_SEND_MESSAGE_CONFERENCE_NOT_FOUND
	TOX_ERR_CONFERENCE_SEND_MESSAGE_TOO_LONG             = C.TOX_ERR_CONFERENCE_SEND_MESSAGE_TOO_LONG
	TOX_ERR_CONFERENCE_SEND_MESSAGE_NO_CONNECTION        = C.TOX_ERR_CONFERENCE_SEND_MESSAGE_NO_CONNECTION
	TOX_ERR_CONFERENCE_SEND_MESSAGE_FAIL_SEND            = C.TOX_ERR_CONFERENCE_SEND_MESSAGE_FAIL_SEND
)

type ToxErrConferenceTitle C.TOX_ERR_CONFERENCE_GET_TYPE

var (
	TOX_ERR_CONFERENCE_TITLE_OK                   = C.TOX_ERR_CONFERENCE_TITLE_OK
	TOX_ERR_CONFERENCE_TITLE_CONFERENCE_NOT_FOUND = C.TOX_ERR_CONFERENCE_TITLE_CONFERENCE_NOT_FOUND
	TOX_ERR_CONFERENCE_TITLE_INVALID_LENGTH       = C.TOX_ERR_CONFERENCE_TITLE_INVALID_LENGTH
	TOX_ERR_CONFERENCE_TITLE_FAIL_SEND            = C.TOX_ERR_CONFERENCE_TITLE_FAIL_SEND
)

type ToxErrConferenceGetType C.TOX_ERR_CONFERENCE_GET_TYPE

var (
	TOX_ERR_CONFERENCE_GET_TYPE_OK                   = C.TOX_ERR_CONFERENCE_GET_TYPE_OK
	TOX_ERR_CONFERENCE_GET_TYPE_CONFERENCE_NOT_FOUND = C.TOX_ERR_CONFERENCE_GET_TYPE_CONFERENCE_NOT_FOUND
)

// ====toxAV
var (
	ErrToxAVNew  = errors.New("Error initializing ToxAV")
	ErrToxAVInit = errors.New("ToxAV not initialized")
)
var (
	ErrNewMultiple = errors.New("Not allow to create a second session")
)

type ToxavErrNew C.TOXAV_ERR_NEW

var (
	TOXAV_ERR_NEW_OK       = C.TOXAV_ERR_NEW_OK
	TOXAV_ERR_NEW_NULL     = C.TOXAV_ERR_NEW_NULL
	TOXAV_ERR_NEW_MALLOC   = C.TOXAV_ERR_NEW_MALLOC
	TOXAV_ERR_NEW_MULTIPLE = C.TOXAV_ERR_NEW_MULTIPLE
)

type ToxavErrCall C.TOXAV_ERR_CALL

var (
	TOXAV_ERR_CALL_OK                     = C.TOXAV_ERR_CALL_OK
	TOXAV_ERR_CALL_MALLOC                 = C.TOXAV_ERR_CALL_MALLOC
	TOXAV_ERR_CALL_SYNC                   = C.TOXAV_ERR_CALL_SYNC
	TOXAV_ERR_CALL_FRIEND_NOT_FOUND       = C.TOXAV_ERR_CALL_FRIEND_NOT_FOUND
	TOXAV_ERR_CALL_FRIEND_NOT_CONNECTED   = C.TOXAV_ERR_CALL_FRIEND_NOT_CONNECTED
	TOXAV_ERR_CALL_FRIEND_ALREADY_IN_CALL = C.TOXAV_ERR_CALL_FRIEND_ALREADY_IN_CALL
	TOXAV_ERR_CALL_INVALID_BIT_RATE       = C.TOXAV_ERR_CALL_INVALID_BIT_RATE
)

type ToxavErrAnswer C.TOXAV_ERR_ANSWER

var (
	TOXAV_ERR_ANSWER_OK                   = C.TOXAV_ERR_ANSWER_OK
	TOXAV_ERR_ANSWER_SYNC                 = C.TOXAV_ERR_ANSWER_SYNC
	TOXAV_ERR_ANSWER_CODEC_INITIALIZATION = C.TOXAV_ERR_ANSWER_CODEC_INITIALIZATION
	TOXAV_ERR_ANSWER_FRIEND_NOT_FOUND     = C.TOXAV_ERR_ANSWER_FRIEND_NOT_FOUND
	TOXAV_ERR_ANSWER_FRIEND_NOT_CALLING   = C.TOXAV_ERR_ANSWER_FRIEND_NOT_CALLING
	TOXAV_ERR_ANSWER_INVALID_BIT_RATE     = C.TOXAV_ERR_ANSWER_INVALID_BIT_RATE
)
